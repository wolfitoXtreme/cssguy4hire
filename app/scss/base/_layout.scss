// 
// layout
//

// set breakpoints to EMS
@if($debug != true) {
    @include breakpoint-set('to ems', true);
}

html, body {
    height: 100%;
}

body {
    overflow: hidden;
    background-color: $light-black;

    // test mediaQueries
    @include queryInfo();
}

// main
.main {
    $_shadow-height: prem(20px);
    $_shadow-colors: rgba($black, 0.85) 1%, rgba($black, 0.55) 25%, rgba($black, 0) 60%;

    min-height: 100%;
    position: relative;

    &:before,
    &:after {
        content: "";
        left: 0;
        top: -$_shadow-height;
        width: 100%;
        height: $_shadow-height;
        position: absolute;
        background-image: linear-gradient(0deg, $_shadow-colors);
    }

    &:after {
        top: auto;
        bottom: -$_shadow-height;
        background-image: linear-gradient(180deg, $_shadow-colors);
    }
}

%panel-hpadding {
    $_hSpace: getPercentageFrom(
        nth($panel-padding-x-small, 2), 
        map-get($breakpoints, x-small)
    );
    padding: 0 $_hSpace;
    @include breakpoint(map-get($breakpoints, small)) {
        $_hSpace: getPercentageFrom(
            nth($panel-padding-small, 2), 
            map-get($breakpoints, small)
        );

        padding: 0 $_hSpace;
    }
    @include breakpoint(map-get($breakpoints, medium)) {
        $_hSpace: getPercentageFrom(
            nth($panel-padding-medium, 2), 
            map-get($breakpoints, medium)
        );

        padding: 0 $_hSpace;
    }
    @include breakpoint(map-get($breakpoints, large)) {
        $_hSpace: nth($panel-padding-large, 2);

        padding: 0 $_hSpace;
        max-width: prem($site-max-width);
    }
}

// panel
.panel {
    width: 100%;
    height: 100%;
    min-height: 100%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;

    // panel__detail
    &__detail {
        width: 100%;
        max-height: 100%;
        z-index: 1;
        @extend %panel-hpadding;
    }
}

// footer
.footer {
    @include hidden;
}

// column-lists
.column-list {
    @include breakpoint((orientation landscape)) {
        column-count: 2;
        column-gap: prem(18px);
    }

    @include breakpoint(map-get($breakpoints, small)) {
        column-gap: prem(22px);
    }
    
    // set two columns for 600px and beyond
    @include breakpoint(600px) {
        column-count: 2;
    }

    @include breakpoint(map-get($breakpoints, medium)) {
        column-gap: prem(30px);
    }

    @include breakpoint(map-get($breakpoints, large)) {
        column-gap: prem(40px);
    }

    @include breakpoint($site-max-width (orientation landscape)) {
        column-gap: prem(80px);
    }
    
    // column-list__item
    &__item {
        width: 100%;
        display: inline-block;
        break-inside: avoid;
    }
}

// not-displayable - overlay
.not-displayable {
    $_transition-duration: 250ms;

    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 100;
    display: none;
    opacity: 0;
    outline-style: solid;
    flex-flow: column;
    align-items: center;
    justify-content: center;
    transition: opacity $_transition-duration ease-out 0ms;
    background-color: $light-black;


    @include breakpoint(orientation portrait) {
        
        @include breakpoint(map-get($breakpoints, x-small)) {
            outline-style: none;

            @include breakpoint(max-height 360px) {
                outline-style: solid;
            }
        }

        @include breakpoint(map-get($breakpoints, small)) {
            outline-style: none;
        }
    }

    @include breakpoint(orientation landscape) {
        outline-style: solid;

        @include breakpoint(map-get($breakpoints, x-small)) {
            outline-style: solid;
        }

        @include breakpoint(map-get($breakpoints, small)) {
            outline-style: none;
            
            @include breakpoint(max-height 240px) {
                outline-style: solid;
            }
            
            // avoid skills list in one column to overflow screen
            @include breakpoint((max-height 350px) (max-width (560px))) {
                outline-style: solid;
            }
        }

        @include breakpoint(map-get($breakpoints, medium)) {
            outline-style: none;

            @include breakpoint(max-height 340px) {
                outline-style: solid;
            }
        }

        @include breakpoint(map-get($breakpoints, large)) {
            outline-style: none;

            @include breakpoint(max-height 420px) {
                outline-style: solid;
            }
        }
    }
    
    // not-displayable--active
    &--active {
        display: flex;
    }
    
    // not-displayable--enabled
    &--enabled {
        opacity: 1;
    }

    // not-displayable__icon
    &__icon {
        // icons are squares at this moment
        // therefore these calculations are not needed,
        // this is just for demonstration purposes 
        $_icon-width: nth(map-get($icons, icon-resize-up), 2);
        $_icon-height: nth(map-get($icons, icon-resize-up), 2);

        $_new-width: 28px;
        $_new-height: stretchBySize($_icon-width, $_icon-height, $_new-width);
        
        margin-bottom: prem(14px);
        width: prem($_new-width);
        height: prem($_new-height);
        fill: $white;
        opacity: 0;
        transition: opacity ($_transition-duration * 3) ease-out 250ms;

        @include breakpoint(map-get($breakpoints, medium)) {
            width: prem($_icon-width);
            height: prem($_icon-height);
        }
        
         // not-displayable--enabled not-displayable__icon
        .not-displayable--enabled & {
            opacity: 1;
        }

    }

    // not-displayable__text
    &__text {
        margin: 0 auto;
        width: 100%;
        text-align: center;
        opacity: 0;
        transform: scale(0);
        
        @include transitions(($_transition-duration * 2), ease-out, 250ms, (
            transform,
            opacity
        ));

        @extend %panel-hpadding;
        
        // not-displayable--enabled not-displayable__text
        .not-displayable--enabled & {
            opacity: 1;
            transform: scale(1);
        }
    }
}