// 
// forms
// 

// form layout
.form {

    // form-row
    &-row {

    }

    // form-column
    &-column {

    }

    // form-field
    &-field {
        padding-bottom: prem(6px);
    }

    // form-buttons
    &-buttons {

    }

}

// field sets
fieldset {
    padding: 0;
    border-style: none;
}

// legend 
legend {
    @include hidden;
}

// labels
label {
    padding-left: prem(3px);
    font-weight: 600;
    opacity: 0.8;
    font-size: prem($font-size-micro);
    letter-spacing: -0.028em;
    text-transform: uppercase;
    line-height: 1.1;
    display: inline-block;
    @include hidden;

    @include breakpoint(map-get($breakpoints, small)) {
        font-size: prem($font-size-xxx-small);
    }

    @include breakpoint(map-get($breakpoints, medium)) {
        padding-left: prem(6px);
        font-size: prem($font-size-xx-small);
        letter-spacing: -0.04em;
        @include unhidden(false);
    }

    @include breakpoint(map-get($breakpoints, large)) {
        padding-left: prem(7px);
        font-size: prem($font-size-normal);
    }

    // sibling fields
    & + input[type="text"],
    & + input[type="tel"],
    & + input[type="email"],
    & + input[type="number"],
    & + input[type="password"],
    & + textarea,
    & + select {
        @include breakpoint(map-get($breakpoints, medium)) {
            margin-top: -1px;
        }
    }
}


// 
// fields
// 

%fields {
    margin: 0;
    padding: prem(5px) prem(8px) prem(6px);
    width: 100%;
    font-family: unquote($default-font + ', ' + $default-font-fallback);
    font-weight: 300;
    color: map-deep-get($field-colors, field, color);
    border: 2px solid map-deep-get($field-colors, field, border);
    border-radius: 5px;
    line-height: $line-height-default;
    background-color: map-deep-get($field-colors, field, background);
    @include no-highlight;

    @include breakpoint(map-get($breakpoints, medium)) {
        padding: prem(6px) prem(8px) prem(7px);
        border-radius: 6px;
    }

    @include breakpoint(map-get($breakpoints, large)) {
        padding: prem(9px) prem(14px) prem(11px);
        border-width: 3px;
        border-radius: 7px;
    }

    &:hover,
    &:focus {
        border-color: map-deep-get($field-colors, hover, border);
    }

    &:focus {
        background-color: map-deep-get($field-colors, active, background);
    }

    &::placeholder {
        color: $dark-grey;
    }

    &:hover::placeholder {
        color: map-deep-get($field-colors, hover, color);
    }
}

%input-buttons {
    @include no-highlight;
    @include hidden;

    // show labels hidden by default
    & ~ label {
        @include unhidden;
    }
}

// common input fields
input[type="text"],
input[type="tel"],
input[type="email"],
input[type="number"],
input[type="password"] {
    @extend %fields;
}

// not in scope
input[type="file"] {}
input[type="range"] {}
input[type="search"] {}
input[type="date"] {}
input[type="datetime-local"] {}
input[type="month"] {}
input[type="week"] {}
input[type="time"] {}
input[type="url"] {}
input[type="color"] {}

// radio buttons
input[type="radio"] {
    @extend %input-buttons;

    // radio button icons
    & + label {
        $_icon-size: prem(14px);
        $_icon-inner-size: prem(6px);
        $_gap: prem(3px);

        padding: 0 prem(2px) prem(4px) $_icon-size + $_gap;
        line-height: $line-height-default;
        position: relative;

        &:before,
        &:after {
            content: "";
            left: 0;
            margin-top: -($_icon-size / 2);
            top: (0.9em * ($line-height-default)) / 2;
            width: $_icon-size;
            height: $_icon-size;
            display: block;
            border: 2px solid lighten(map-deep-get($field-colors, field, border), 10%);
            border-radius: 100%;
            position: absolute;
        }

        &:after {
            margin-top: -($_icon-inner-size / 2);
            left: ($_icon-size - $_icon-inner-size) / 2;
            width: $_icon-inner-size;
            height: $_icon-inner-size;
            background-color: lighten(map-deep-get($field-colors, field, border), 30%);
            border-style: none;
        }
        
        // hover state change only for non touch devices (sticky hover)
        .no-touchevents &:hover {
            
            &:before {
                border-color: map-deep-get($field-colors, hover, border);
            }

            &:after {
                background-color: map-deep-get($field-colors, hover, border);
            }
        }

        @include breakpoint(map-get($breakpoints, small)) {
            padding-right: prem(5px);
        }

        @include breakpoint(map-get($breakpoints, medium)) {
            $_icon-size: prem(16px);
            $_icon-inner-size: prem(8px);
            
            padding-right: prem(7px);
            padding-left: $_icon-size + $_gap;

            &:before,
            &:after {
                margin-top: -($_icon-size / 2);
                width: $_icon-size;
                height: $_icon-size;
                border-width: 2px;
            }

            &:after {
                margin-top: -($_icon-inner-size / 2);
                left: ($_icon-size - $_icon-inner-size) / 2;
                width: $_icon-inner-size;
                height: $_icon-inner-size;
            }
        }

        @include breakpoint(map-get($breakpoints, large)) {
            $_icon-size: prem(18px);
            $_icon-inner-size: prem(10px);
            
            padding-right: prem(9px);
            padding-left: $_icon-size + $_gap;

            &:before,
            &:after {
                margin-top: -($_icon-size / 2);
                width: $_icon-size;
                height: $_icon-size;
                border-width: 2px;
            }

            &:after {
                margin-top: -($_icon-inner-size / 2);
                left: ($_icon-size - $_icon-inner-size) / 2;
                width: $_icon-inner-size;
                height: $_icon-inner-size;
            }
        }


    }

    &:checked {
        // radio button icons
        & + label {
            color: map-deep-get($field-colors, field, color);
            &:before {
                border-color: map-deep-get($field-colors, active, border);
            }
            &:after {
                background-color: map-deep-get($field-colors, active, border);
            }
        }
    }
}

// checkbox buttons
input[type="checkbox"] {
    @extend input[type="radio"];
    & + label {
        &:before,
        &:after {
            border-radius: 0;
        }
    }
}

// text areas
textarea {
    height: prem((($font-size-default *  $line-height-default) * 5) + (13)); // five lines
    overflow-x: hidden;
    resize: none;
    @extend %fields;

    @include breakpoint(map-get($breakpoints, small)) {
        height: prem((($font-size-small *  $line-height-default) * 5) + (15)); // five lines
    }

    @include breakpoint(map-get($breakpoints, medium)) {
        height: prem((($font-size-normal *  $line-height-default) * 5) + (17)); // five lines
    }

    @include breakpoint(map-get($breakpoints, large)) {
        height: prem((($font-size-x-large *  $line-height-default) * 5) + (24)); // five lines
    }
}

// select
select {
    appearance: none;
    -moz-appearance: none; // Firefox appearance
    @extend %fields;

    // remove drop down arrow for IE
    &::-ms-expand {
        display: none;
    }
}

// options
option option[value=""][disabled] {
    display: none;
}

// buttons
button, 
.button {

}
