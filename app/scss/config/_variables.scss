// 
// global variables
//

$debug: false !default;

// 
// configuration
// ----------------
@import 'config/breakpoints'; // modifications -> manual: app/config/breakpoints.json
@import 'config/icons'; // modifications -> automated: running gulp
@import 'config/images'; // modifications -> automated: running gulp
@import 'config/font-sizes'; // modifications -> manual: app/config/font-sizes.json
@import 'config/colors'; // modifications -> manual: app/config/colors.json

// 
// fonts
// ----------------

// font families
$fonts: (
    'opensans': (
        300: 'opensans-light',
        400: 'opensans-regular',
        700: 'opensans-bold'
     ),
    'oswald': (
        400: 'oswald-regular',
        700: 'oswald-bold'
    ),
    'oswald-book': (
        400: 'oswald-book'
    )
);

// default fonts
$default-font: opensans;
$default-font-fallback: Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;

// default title
$title-font: oswald;

// font sizes (mirrors _font-sizes.scss values)
$font-size-tiny:        nth(map-get($font-sizes, tiny), 1);
$font-size-xx-small:    nth(map-get($font-sizes, xx-small), 1);
$font-size-x-small:     nth(map-get($font-sizes, x-small), 1);
$font-size-small:       nth(map-get($font-sizes, small), 1);
$font-size-medium:      nth(map-get($font-sizes, medium), 1);
$font-size-large:       nth(map-get($font-sizes, large), 1);
$font-size-x-large:     nth(map-get($font-sizes, x-large), 1);
$font-size-xx-large:    nth(map-get($font-sizes, xx-large), 1);
$font-size-huge:        nth(map-get($font-sizes, huge), 1);

//  default font size
$font-size-default:     $font-size-medium;


// 
// colors
// ----------------

// color names (mirrors _colors.scss values)
$white:     nth(map-get($colors, white), 1);
$black:     nth(map-get($colors, black), 1);
$red:       nth(map-get($colors, red), 1);
$yellow:    nth(map-get($colors, yellow), 1);
$blue:      nth(map-get($colors, blue), 1);