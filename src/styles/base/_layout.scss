@import '~@styles/config/variables';
@import '~@styles/helpers/functions';
@import '~@styles/helpers/mixins';

//
// layout
//

// set breakpoints to EMS
@if ($debug != true) {
  @include breakpoint-set('to ems', true);
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}

body {
  overflow: hidden;
  background-color: $light-black;

  // targets #root container
  > div {
    height: 100%;
    min-height: 100%;
    display: flex;
    flex-flow: column;
  }

  // test mediaQueries
  @include queryInfo();
}

// column-lists
.column-list {
  @include breakpoint((orientation landscape)) {
    column-count: 2;
    column-gap: 18px;
  }

  @include breakpoint(map-get($breakpoints, small)) {
    column-gap: 22px;
  }

  // set two columns for 600px and beyond
  @include breakpoint(600px) {
    column-count: 2;
  }

  @include breakpoint(map-get($breakpoints, medium)) {
    column-gap: 30px;
  }

  @include breakpoint(map-get($breakpoints, large)) {
    column-gap: 40px;
  }

  @include breakpoint($app-max-width(orientation landscape)) {
    column-gap: 80px;
  }

  &-item {
    width: 100%;
    display: inline-block;
    break-inside: avoid;
  }
}

%section-horizontal-padding {
  $section-padding-x-small: 0 48px;
  $section-padding-small: 0 54px;
  $section-padding-medium: 0 106px;
  $section-padding-large: 0 142px;

  $horizontal-space: getPercentageFrom(
    nth($section-padding-x-small, 2),
    map-get($breakpoints, x-small)
  );

  padding: 0 $horizontal-space;

  @include breakpoint(map-get($breakpoints, small)) {
    $horizontal-space: getPercentageFrom(
      nth($section-padding-small, 2),
      map-get($breakpoints, small)
    );

    padding: 0 $horizontal-space;
  }
  @include breakpoint(map-get($breakpoints, medium)) {
    $horizontal-space: getPercentageFrom(
      nth($section-padding-medium, 2),
      map-get($breakpoints, medium)
    );

    padding: 0 $horizontal-space;
  }
  @include breakpoint(map-get($breakpoints, large)) {
    $horizontal-space: nth($section-padding-large, 2);

    padding: 0 $horizontal-space;
    max-width: $app-max-width;
  }
}
